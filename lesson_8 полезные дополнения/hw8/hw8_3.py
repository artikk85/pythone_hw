# Создайте собственный класс-исключение, который должен проверять содержимое списка
# на наличие только чисел. Проверить работу исключения на реальном примере.
# Запрашивать у пользователя данные и заполнять список необходимо только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
# При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
# Вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
# соответствующее сообщение. При этом работа скрипта не должна завершаться.

class ERRoR:
    def __init__(self, *args):
        self.my_list = []

    def my_input(self):
        while True:
            try:
                val = int(input('введите число и нажмите Enter: '))
                self.my_list.append(val)
                print (f'список введеных чисел: {self.my_list}')
            except:
                print('ERRoR! неверно указанно значение')
                q = input('для выхода нажмите Q, для продолжения введите число: ')
                if q == int(val):
                    return f'список введеных чисел: {self.my_list}'
                if q == 'q' or q == 'Q':
                    break
        return f'список введеных чисел: {self.my_list}'


user = ERRoR(1)
print(user.my_input())
